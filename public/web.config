<?xml version="1.0" encoding="UTF-8"?>
<configuration>
  <system.webServer>
    <!-- URL Rewriting for React SPA -->
    <rewrite>
      <rules>
        <!-- Handle React Router - Send all requests to index.html -->
        <rule name="React Router" stopProcessing="true">
          <match url=".*" />
          <conditions logicalGrouping="MatchAll">
            <add input="{REQUEST_FILENAME}" matchType="IsFile" negate="true" />
            <add input="{REQUEST_FILENAME}" matchType="IsDirectory" negate="true" />
            <add input="{REQUEST_URI}" pattern="^/\.well-known/" negate="true" />
          </conditions>
          <action type="Rewrite" url="/index.html" />
        </rule>
      </rules>
    </rewrite>

    <!-- Security Headers -->
    <httpProtocol>
      <customHeaders>
        <!-- Allow iframes for Google Maps (more permissive) -->
        <add name="X-Frame-Options" value="ALLOWALL" />
        
        <!-- Prevent MIME type sniffing -->
        <add name="X-Content-Type-Options" value="nosniff" />
        
        <!-- Enable XSS protection -->
        <add name="X-XSS-Protection" value="1; mode=block" />
        
        <!-- Referrer Policy -->
        <add name="Referrer-Policy" value="strict-origin-when-cross-origin" />
        
        <!-- Content Security Policy -->
        <add name="Content-Security-Policy" value="default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self'; frame-src 'self' https://www.google.com https://maps.google.com; frame-ancestors 'self';" />
        
        <!-- Permissions Policy -->
        <add name="Permissions-Policy" value="geolocation=(), microphone=(), camera=(), fullscreen=()" />
        
        <!-- Open Graph Protocol -->
        <add name="X-Open-Graph-Protocol" value="1" />
        
        <!-- Twitter Card -->
        <add name="X-Twitter-Card" value="summary_large_image" />
      </customHeaders>
    </httpProtocol>

    <!-- Static Content Compression -->
    <urlCompression doStaticCompression="true" doDynamicCompression="true" />
    
    <!-- Static Content Caching -->
    <staticContent>
      <clientCache cacheControlMode="UseMaxAge" cacheControlMaxAge="365.00:00:00" />
      
      <!-- MIME Types -->
      <mimeMap fileExtension=".webp" mimeType="image/webp" />
      <mimeMap fileExtension=".woff" mimeType="font/woff" />
      <mimeMap fileExtension=".woff2" mimeType="font/woff2" />
    </staticContent>

    <!-- Error Pages -->
    <httpErrors errorMode="Custom" existingResponse="Replace">
      <remove statusCode="404" />
      <error statusCode="404" path="/index.html" responseMode="ExecuteURL" />
      <remove statusCode="500" />
      <error statusCode="500" path="/index.html" responseMode="ExecuteURL" />
    </httpErrors>

    <!-- Directory Browsing -->
    <directoryBrowse enabled="false" />
    
    <!-- Default Document -->
    <defaultDocument>
      <files>
        <clear />
        <add value="index.html" />
      </files>
    </defaultDocument>

    <!-- Performance Settings -->
    <caching>
      <profiles>
        <add extension=".css" policy="CacheForTimePeriod" duration="00:01:00:00" />
        <add extension=".js" policy="CacheForTimePeriod" duration="00:01:00:00" />
        <add extension=".png" policy="CacheForTimePeriod" duration="00:01:00:00" />
        <add extension=".jpg" policy="CacheForTimePeriod" duration="00:01:00:00" />
        <add extension=".jpeg" policy="CacheForTimePeriod" duration="00:01:00:00" />
        <add extension=".gif" policy="CacheForTimePeriod" duration="00:01:00:00" />
        <add extension=".webp" policy="CacheForTimePeriod" duration="00:01:00:00" />
        <add extension=".svg" policy="CacheForTimePeriod" duration="00:01:00:00" />
        <add extension=".woff" policy="CacheForTimePeriod" duration="00:01:00:00" />
        <add extension=".woff2" policy="CacheForTimePeriod" duration="00:01:00:00" />
        <add extension=".ttf" policy="CacheForTimePeriod" duration="00:01:00:00" />
        <add extension=".eot" policy="CacheForTimePeriod" duration="00:01:00:00" />
      </profiles>
    </caching>

    <!-- Security Settings -->
    <security>
      <requestFiltering>
        <!-- Hide file extensions -->
        <requestLimits maxAllowedContentLength="30000000" />
        
        <!-- Block access to sensitive files -->
        <hiddenSegments>
          <add segment=".git" />
          <add segment=".svn" />
          <add segment="node_modules" />
          <add segment="src" />
          <add segment="package.json" />
          <add segment="package-lock.json" />
        </hiddenSegments>
        
        <!-- File extensions to block -->
        <fileExtensions allowUnlisted="true">
          <remove fileExtension=".htaccess" />
          <remove fileExtension=".htpasswd" />
          <remove fileExtension=".ini" />
          <remove fileExtension=".log" />
          <remove fileExtension=".sh" />
          <remove fileExtension=".sql" />
          <remove fileExtension=".conf" />
        </fileExtensions>
      </requestFiltering>
    </security>

    <!-- HTTP Response Headers -->
    <httpProtocol>
      <customHeaders>
        <!-- Cache Control for static assets -->
        <add name="Cache-Control" value="public, max-age=31536000, immutable" />
      </customHeaders>
    </httpProtocol>
  </system.webServer>
</configuration>
